// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url 'https://maven.fabric.io/public'
        }
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        if (getGradle().getStartParameter().getTaskNames().toString().toLowerCase().contains('release') ||
                getGradle().getStartParameter().getTaskNames().toString().contains('dependencyUpdates')) {
            classpath 'com.google.gms:google-services:4.3.0'
            classpath 'io.fabric.tools:gradle:1.29.0'
            classpath 'com.google.firebase:firebase-plugins:2.0.0'
        }

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.vanniktech.android.junit.jacoco' version '0.15.0'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'com.github.ben-manes.versions' version '0.21.0'
}

allprojects {
    repositories {
        jcenter()
        google()
        maven {
            url 'https://jitpack.io'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Will ensure the Gradle Versions Plugin only alerts me to available upgrades to proper release versions
dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'b', 'preview'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
